<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.clarin.sru.fcs</groupId>
        <artifactId>aggregator</artifactId>
        <version>4.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>aggregator-app</artifactId>
    <name>FCS Aggregator App</name>

    <properties>
        <!-- build artifact stuff -->
        <serviceUser>aggregator</serviceUser>
        <serviceGroup>aggregator</serviceGroup>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.parent.groupId}</groupId>
                <artifactId>${project.parent.artifactId}</artifactId>
                <version>${project.parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- dropwizard -->
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-assets</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-views-mustache</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-json-logging</artifactId>
        </dependency>

        <!-- servlet stuff, e.g. request filtering -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- api doc: swagger -->
        <!--
        <dependency>
            <groupId>com.smoketurner</groupId>
            <artifactId>dropwizard-swagger</artifactId>
            <version>2.1.4-1</version>
        </dependency>
        -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-integration</artifactId>
        </dependency>

        <!-- aggregator-core -->
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>aggregator-core</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <!-- CLARIN SRU/FCS -->
        <dependency>
            <groupId>eu.clarin.sru.fcs</groupId>
            <artifactId>fcs-simple-client</artifactId>
        </dependency>

        <!-- CLARIN weblicht, TCF export -->
        <dependency>
            <groupId>eu.clarin.weblicht</groupId>
            <artifactId>wlfxb</artifactId>
        </dependency>

        <!-- required for e.g. centre loading -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-jaxb</artifactId>
        </dependency>
        <!-- java 11+ support, centre loading -->
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>2.3.0.1</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.3.1</version>
        </dependency>

        <!-- AAI -->
        <dependency>
            <groupId>de.mpg.mpgaai</groupId>
            <artifactId>mpgaai-shhaa</artifactId>
        </dependency>

        <!-- language detection -->
        <dependency>
            <groupId>com.optimaize.languagedetector</groupId>
            <artifactId>language-detector</artifactId>
            <version>0.6</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- exporting stuff -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.4.1</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jopendocument</groupId>
            <artifactId>jOpenDocument</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <DependencyConvergence />
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>eu.clarin.sru.fcs.aggregator.app.AggregatorApp</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- other build artifacts -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <needarch>noarch</needarch>
                    <targetOS>linux</targetOS>
                    <targetVendor>pc</targetVendor>
                    <group>Applications/System</group>
                    <name>${project.artifactId}</name>
                    <release>${buildNumber}</release>
                    <mappings>
                        <mapping>
                            <directory>/usr/share/${project.artifactId}/</directory>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.artifactId}-${project.version}.jar</location>
                                    <destination>${project.artifactId}.jar</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/${project.artifactId}/</directory>
                            <filemode>700</filemode>
                            <username>${serviceUser}</username>
                            <groupname>${serviceGroup}</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/log/${project.artifactId}/</directory>
                            <filemode>700</filemode>
                            <username>${serviceUser}</username>
                            <groupname>${serviceGroup}</groupname>
                        </mapping>
                        <mapping>
                            <directory>/usr/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/bin/service.sh</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/init.d</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/init-scripts/redhat</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/default</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/conf/etc.default</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/clarind</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <filemode>644</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/conf/${project.artifactId}.yaml</location>
                                    <destination>${project.artifactId}.yaml</destination>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <script>
                            /usr/bin/getent group ${serviceGroup} &gt; /dev/null || /usr/sbin/groupadd ${project.artifactId}
                            /usr/bin/getent passwd ${serviceUser} &gt; /dev/null || /usr/sbin/useradd -r -d /var/lib/${project.artifactId} -m -g ${serviceGroup} ${serviceUser}
                        </script>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <script>
                            chkconfig --add ${project.artifactId};
                            chkconfig ${project.artifactId} on;
                            if [ $1 -eq 0 ]; then
                            /sbin/service ${project.artifactId} start
                            elif [ $1 -ge 1 ]; then
                            /sbin/service ${project.artifactId} restart
                            fi
                        </script>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <script>
                            if [ $1 -eq 0 ] ; then
                            /sbin/service ${project.artifactId} stop;chkconfig --del ${project.artifactId}
                            fi
                        </script>
                    </preremoveScriptlet>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <configuration>
                    <dataSet>
                        <data>
                            <src>${project.build.directory}/${project.artifactId}-${project.version}.jar</src>
                            <type>file</type>
                            <dst>/usr/share/${project.artifactId}/${project.artifactId}.jar</dst>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/bin/service.sh</src>
                            <dst>/usr/bin/${project.artifactId}</dst>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/init-scripts/ubuntu</src>
                            <dst>/etc/init.d/${project.artifactId}</dst>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/conf/${project.artifactId}.yaml</src>
                            <dst>/etc/clarind/${project.artifactId}.yaml</dst>
                            <type>file</type>
                            <conffile>true</conffile>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/conf/etc.default</src>
                            <dst>/etc/default/${project.artifactId}</dst>
                            <type>file</type>
                            <conffile>true</conffile>
                        </data>
                        <data>
                            <type>template</type>
                            <paths>
                                <path>var/lib/${project.artifactId}</path>
                                <path>var/log/${project.artifactId}</path>
                            </paths>
                            <mapper>
                                <type>perm</type>
                                <user>${project.artifactId}</user>
                                <group>${project.artifactId}</group>
                            </mapper>
                        </data>
                    </dataSet>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>