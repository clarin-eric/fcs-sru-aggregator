aggregatorParams:
  CENTER_REGISTRY_URL: https://centres.clarin.eu/
  # additionalCQLEndpoints:
    # - https://clarin.ids-mannheim.de/digibibsru-new
  # additionalFCSEndpoints:

  AGGREGATOR_FILE_PATH: /var/lib/aggregator/fcsAggregatorResources.json
  AGGREGATOR_FILE_PATH_BACKUP: /var/lib/aggregator/fcsAggregatorResources.backup.json

  SCAN_MAX_DEPTH: 3 # recommended 3
  SCAN_TASK_INITIAL_DELAY: 0
  SCAN_TASK_INTERVAL: 12
  SCAN_TASK_TIME_UNIT: HOURS
  SCAN_MAX_CONCURRENT_REQUESTS_PER_ENDPOINT: 4  # @depth2: 1=361s; 2=225s; 4=207s

  SEARCH_MAX_CONCURRENT_REQUESTS_PER_ENDPOINT: 4
  SEARCH_MAX_CONCURRENT_REQUESTS_PER_SLOW_ENDPOINT: 1
  slowEndpoints:
    - http://cqlservlet.mpi.nl/

  ENDPOINTS_SCAN_TIMEOUT_MS: 600000
  ENDPOINTS_SEARCH_TIMEOUT_MS: 30000
  EXECUTOR_SHUTDOWN_TIMEOUT_MS: 1000

  weblichtConfig:
    url: https://weblicht.sfs.uni-tuebingen.de/weblicht/?input=
    exportServerUrl: ${SERVER_URL:-https://contentsearch.clarin.eu/}rest/
    acceptedTcfLanguages:
      - en
      - de
      - nl
      - fr
      - it
      - es
      - pl

  prettyPrintJSON: false

  aaiConfig:
    enabled: ${SHIB_ENABLED:-false}

  piwikConfig:
    enabled: ${PIWIK_ENABLED:-true}
    url: ${PIWIK_URL:-https://stats.clarin.eu/}
    siteID: ${PIWIK_SITEID:-20}
    setDomains: ${PIWIK_SETDOMAINS:-['*.contentsearch.clarin.eu']}

  searchResultLinkEnabled: ${SEARCH_RESULT_LINK_ENABLED:-false}

  openapiEnabled: ${SWAGGER_ENABLED:-true}
  SERVER_URL: ${SERVER_URL:-https://contentsearch.clarin.eu/}
  VALIDATOR_URL: ${VALIDATOR_URL:-https://www.clarin.eu/fcsvalidator/}

# use the simple server factory, run on a single port
server:
  applicationContextPath: /
  type: simple
  #rootPath: '/rest/*'
  connector:
    type: http
    port: 4019

# Logging settings.
logging:
  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: WARN
  # Logger-specific levels.
  loggers:
    eu.clarin.sru.fcs.aggregator: INFO
    eu.clarin.sru.client: WARN

    # scan/search statistics
    # may be used to anonymously collect statistics about endpoint/resource usage
    # intended use case: collection of usage statistics over longer time frames
    # - to provide feedback to endpoint deployers about search behaviour (query type, "search more" requests, general result info (#records))
    # - to improve user interface (do users use resource selection feature or simply keep default) and documentation/help
    #fcsstats:
    #  # explain/search/result sub loggers
    #  # log requests will only be output at TRACE level, any other level will not log anything
    #  level: TRACE
    #  # do not output logs into main/default log
    #  additive: false
    #  # custom output, rotating for each day, for at most a year
    #  appenders:
    #    - type: file
    #      currentLogFilename: /var/log/aggregator/stats/stats.log
    #      archivedLogFilenamePattern: /var/log/aggregator/stats/stats-%d.log.gz
    #      archivedFileCount: 365
    # disabled by:
    fcsstats: WARN

  appenders:
    - type: file
      #currentLogFilename: /var/log/aggregator/access.log
      currentLogFilename: /var/log/aggregator/access.log
      #archivedLogFilenamePattern: /var/log/aggregator/access-%d.log.gz
      archivedLogFilenamePattern: /var/log/aggregator/access-%d.log.gz
      archivedFileCount: 5
#  appenders:
#    - type: console