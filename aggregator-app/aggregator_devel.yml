aggregatorParams:
  CENTER_REGISTRY_URL: https://centres.clarin.eu/
  #additionalCQLEndpoints:
    # - https://clarin.ids-mannheim.de/digibibsru-new
    #- http://localhost:8080/korp-endpoint/sru
    #- https://spraakbanken.gu.se/ws/fcs/2.0/endpoint/korp/sru
    # sideloading endpoint with custom name (both CQL/FCS)
    #- https://spraakbanken.gu.se/ws/fcs/2.0/endpoint/korp/sru  # single string -> URL, no name
    #- url: https://spraakbanken.gu.se/ws/fcs/2.0/endpoint/korp/sru
    #  name: Språkbanken
    #  website: https://spraakbanken.gu.se/
    #- name: Språkbanken 2
    #  url: https://spraakbanken.gu.se/ws/fcs/2.0/endpoint/korp/sru
    #- url: https://spraakbanken.gu.se/ws/fcs/2.0/endpoint/korp/sru  # same as simple string
    #- name: abc  # --> error, URL required

  #additionalFCSEndpoints:
    #- http://localhost:8080/korp-endpoint/sru
    #- https://spraakbanken.gu.se/ws/fcs/2.0/endpoint/korp/sru

  AGGREGATOR_FILE_PATH: fcsAggregatorResources.json
  AGGREGATOR_FILE_PATH_BACKUP: fcsAggregatorResources.backup.json

  SCAN_MAX_DEPTH: 1 # recommended 3
  SCAN_TASK_INITIAL_DELAY: 0
  SCAN_TASK_INTERVAL: 12
  SCAN_TASK_TIME_UNIT: HOURS
  SCAN_MAX_CONCURRENT_REQUESTS_PER_ENDPOINT: 4  # @depth2: 1=361s; 2=225s; 4=207s

  SEARCH_MAX_CONCURRENT_REQUESTS_PER_ENDPOINT: 4
  SEARCH_MAX_CONCURRENT_REQUESTS_PER_SLOW_ENDPOINT: 1
  slowEndpoints:
    - http://cqlservlet.mpi.nl/

  ENDPOINTS_SCAN_TIMEOUT_MS: 60000
  ENDPOINTS_SEARCH_TIMEOUT_MS: 30000
  EXECUTOR_SHUTDOWN_TIMEOUT_MS: 1000

  weblichtConfig:
    url: https://weblicht.sfs.uni-tuebingen.de/weblicht/?input=
    exportServerUrl: ${SERVER_URL:-https://contentsearch.clarin.eu/}rest/
    acceptedTcfLanguages:
      - en
      - de
      - nl
      - fr
      - it
      - es
      - pl

  prettyPrintJSON: true

  aaiConfig:
    enabled: ${SHIB_ENABLED:-false}
    shibWebappHost: ${SERVER_URL:-https://contentsearch.clarin.eu/}
    shibLogin: ${SHIB_LI:-https://contentsearch.clarin.eu/Shibboleth.sso/Login}
    shibLogout: ${SHIB_LO:-https://contentsearch.clarin.eu/Shibboleth.sso/Logout}
    key:
      # Quote ENVVAR if you use something like this which creates whitespaces instead of linebreaks
      #   $ export PUBLIC_KEY=$(cat public-key.pem)
      # You can also create the key like this which creates (escaped) linebreaks "\n" strings
      #   $ export PUBLIC_KEY='-----BEGIN PUBLIC KEY-----\nABC...DEF\n-----END PUBLIC KEY-----'
      #publicKey: '${PUBLIC_KEY}'
      # YOU can also directly embed a key
      publicKey: |
        -----BEGIN PUBLIC KEY-----
        ...
        -----END PUBLIC KEY-----
      # same for privateKey
      privateKey: |
        -----BEGIN PRIVATE KEY-----
        ...
        -----END PRIVATE KEY-----

  piwikConfig:
    enabled: ${PIWIK_ENABLED:-false}
    url: ${PIWIK_URL:-https://stats.clarin.eu/}
    siteID: ${PIWIK_SITEID:-20}
    setDomains: ${PIWIK_SETDOMAINS:-['*.contentsearch.clarin.eu']}

  searchResultLinkEnabled: ${SEARCH_RESULT_LINK_ENABLED:-true}

  openapiEnabled: ${SWAGGER_ENABLED:-true}
  SERVER_URL: ${SERVER_URL:-https://contentsearch.clarin.eu/}
  VALIDATOR_URL: ${VALIDATOR_URL:-https://www.clarin.eu/fcsvalidator/}

# use the simple server factory, run on a single port
server:
  applicationContextPath: /
  type: simple
  connector:
    type: http
    port: 4019

# Logging settings.
logging:
  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO
  # Logger-specific levels.
  loggers:
    eu.clarin.sru.fcs.aggregator: INFO
    eu.clarin.sru.client: WARN
    # DEBUG log print request URLs
    eu.clarin.sru.fcs.aggregator.scan.ScanCrawler: DEBUG
    eu.clarin.sru.fcs.aggregator.search.Search: DEBUG

  appenders:
    - type: console
